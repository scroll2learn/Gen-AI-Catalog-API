"""updated_pipeline_model

Revision ID: 9f8a899a4d2e
Revises: ed1a63e78505
Create Date: 2024-10-17 11:30:54.695992

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9f8a899a4d2e'
down_revision = 'ed1a63e78505'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pipeline',
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('pipeline_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pipeline_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bh_project_id', sa.Integer(), nullable=True),
    sa.Column('git_branch', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bh_project_id'], ['catalogdb.bh_project.bh_project_id'], ),
    sa.PrimaryKeyConstraint('pipeline_id'),
    schema='catalogdb'
    )
    op.create_table('pipeline_definitions',
    sa.Column('pipeline_json', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('pipeline_definition_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipeline.pipeline_id'], ),
    sa.PrimaryKeyConstraint('pipeline_definition_id'),
    schema='catalogdb'
    )
    op.create_table('pipeline_validation_errors',
    sa.Column('error_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('transformation_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipeline.pipeline_id'], ),
    sa.PrimaryKeyConstraint('error_id'),
    schema='catalogdb'
    )
    op.drop_table('pipeline_targets', schema='catalogdb')
    op.drop_table('pipeline_sources', schema='catalogdb')
    op.drop_table('pipeline_setting', schema='catalogdb')
    op.drop_constraint('transform_logic_pipeline_id_fkey', 'transform_logic', schema='catalogdb', type_='foreignkey')
    op.create_foreign_key('transform_logic_pipeline_id_fkey', 'transform_logic', 'pipeline', ['pipeline_id'], ['pipeline_id'], source_schema='catalogdb', referent_schema='catalogdb')
    op.drop_table('pipelines', schema='catalogdb')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("transform_logic_pipeline_id_fkey", 'transform_logic', schema='catalogdb', type_='foreignkey')
    op.create_foreign_key('transform_logic_pipeline_id_fkey', 'transform_logic', 'pipelines', ['pipeline_id'], ['pipeline_id'], source_schema='catalogdb', referent_schema='catalogdb')
    op.create_table('pipelines',
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('pipeline_id', sa.INTEGER(), server_default=sa.text('nextval(\'"catalogdb".pipelines_pipeline_id_seq\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('pipeline_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bh_project_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('git_branch', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pipeline_metadata', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_executed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bh_project_id'], ['catalogdb.bh_project.bh_project_id'], name='pipelines_bh_project_id_fkey'),
    sa.PrimaryKeyConstraint('pipeline_id', name='pipelines_pkey'),
    schema='catalogdb'
    )
    op.create_table('pipeline_setting',
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pipeline_setting', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('pipeline_setting_id', sa.INTEGER(), server_default=sa.text('nextval(\'"catalogdb".pipeline_setting_pipeline_setting_id_seq\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('pipeline_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipelines.pipeline_id'], name='pipeline_setting_pipeline_id_fkey'),
    sa.PrimaryKeyConstraint('pipeline_setting_id', name='pipeline_setting_pkey'),
    schema='catalogdb'
    )
    op.create_table('pipeline_sources',
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('pipeline_src_id', sa.INTEGER(), server_default=sa.text('nextval(\'"catalogdb".pipeline_sources_pipeline_src_id_seq\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('data_src_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_src_lyt_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pipeline_src_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], name='pipeline_sources_data_src_id_fkey'),
    sa.ForeignKeyConstraint(['data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], name='pipeline_sources_data_src_lyt_id_fkey'),
    sa.PrimaryKeyConstraint('pipeline_src_id', name='pipeline_sources_pkey'),
    schema='catalogdb'
    )
    op.create_table('pipeline_targets',
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC'::text)"), autoincrement=False, nullable=True),
    sa.Column('pipeline_tgt_id', sa.INTEGER(), server_default=sa.text('nextval(\'"catalogdb".pipeline_targets_pipeline_tgt_id_seq\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('data_src_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('data_src_lyt_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('pipeline_tgt_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], name='pipeline_targets_data_src_id_fkey'),
    sa.ForeignKeyConstraint(['data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], name='pipeline_targets_data_src_lyt_id_fkey'),
    sa.PrimaryKeyConstraint('pipeline_tgt_id', name='pipeline_targets_pkey'),
    schema='catalogdb'
    )
    op.drop_table('pipeline_validation_errors', schema='catalogdb')
    op.drop_table('pipeline_definitions', schema='catalogdb')
    op.drop_table('pipeline', schema='catalogdb')
    # ### end Alembic commands ###