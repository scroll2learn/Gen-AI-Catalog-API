"""init

Revision ID: e0bd6518e86b
Revises: 
Create Date: 2024-04-22 04:42:07.411501

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW


# revision identifiers, used by Alembic.
revision = 'e0bd6518e86b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('app_user',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ad_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('ad_id'),
    schema='catalogdb'
    )
    op.create_table('bh_project',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('access_details', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('bh_project_id', sa.Integer(), nullable=False),
    sa.Column('bh_project_cld_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bh_project_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bh_project_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cloud_provider_cd', sa.Integer(), nullable=False),
    sa.Column('cloud_region_cd', sa.Integer(), nullable=False),
    sa.Column('access_type_cd', sa.Integer(), nullable=True),
    sa.Column('validation_status', sa.Boolean(), nullable=False),
    sa.Column('business_url', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=True),
    sa.Column('lake_name', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('lake_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('env_cd', sa.Integer(), nullable=True),
    sa.Column('status_cd', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('bh_project_id'),
    schema='catalogdb'
    )
    op.create_table('bh_user',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('project_details', sa.JSON(), nullable=True),
    sa.Column('bh_user_id', sa.Integer(), nullable=False),
    sa.Column('bh_user_first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bh_user_middle_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bh_user_last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_email_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_status_cd', sa.Integer(), nullable=False),
    sa.Column('user_admin_status_cd', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('bh_user_id'),
    schema='catalogdb'
    )
    op.create_table('codes_hdr',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type_cd', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='catalogdb'
    )
    op.create_table('customer',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('alert_setting', sa.JSON(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('relation_ship_owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('relation_ship_owner_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('technology_owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('technology_owner_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status_cd', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('customer_id'),
    schema='catalogdb'
    )
    op.create_table('fld_dq_types',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('dq_lookup', sa.JSON(), nullable=True),
    sa.Column('dq_inputs', sa.JSON(), nullable=True),
    sa.Column('dq_id', sa.Integer(), nullable=False),
    sa.Column('dq_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dq_template', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('dq_id'),
    schema='catalogdb'
    )
    op.create_table('fld_properties',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('fld_valid_values', sa.JSON(), nullable=True),
    sa.Column('fld_top_counts', sa.JSON(), nullable=True),
    sa.Column('fld_id', sa.Integer(), nullable=False),
    sa.Column('fld_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('fld_key', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('fld_datatype', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('is_fld_unique', sa.Boolean(), nullable=False),
    sa.Column('is_fld_mandatory', sa.Boolean(), nullable=False),
    sa.Column('is_fld_categorical', sa.Boolean(), nullable=False),
    sa.Column('is_fld_date', sa.Boolean(), nullable=False),
    sa.Column('is_fld_boolean', sa.Boolean(), nullable=False),
    sa.Column('is_fld_numeric', sa.Boolean(), nullable=False),
    sa.Column('is_fld_text', sa.Boolean(), nullable=False),
    sa.Column('fld_min_value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fld_max_value', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lyt_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('fld_id'),
    schema='catalogdb'
    )
    op.create_table('function_registry',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('function_inputs', sa.JSON(), nullable=True),
    sa.Column('function_outputs', sa.JSON(), nullable=True),
    sa.Column('function_id', sa.Integer(), nullable=False),
    sa.Column('function_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('function_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('function_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('function_id'),
    schema='catalogdb'
    )
    op.create_table('pipelines',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('pipeline_schedule', sa.JSON(), nullable=True),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('pipeline_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pipeline_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pipeline_type_cd', sa.Integer(), nullable=False),
    sa.Column('pipeline_zone_type_cd', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('pipeline_id'),
    schema='catalogdb'
    )
    op.create_table('codes_dtl',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codes_hdr_id', sa.Integer(), nullable=True),
    sa.Column('dtl_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('dtl_id_filter', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['codes_hdr_id'], ['catalogdb.codes_hdr.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='catalogdb'
    )
    op.create_table('connection_dtl',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('connection_dtl_id', sa.Integer(), nullable=False),
    sa.Column('connection_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_delivery_platform_cd', sa.Integer(), nullable=False),
    sa.Column('snow_flake_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('snow_flake_username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('snow_flake_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('warehouse', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('test_connection', sa.Boolean(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['catalogdb.customer.customer_id'], ),
    sa.PrimaryKeyConstraint('connection_dtl_id'),
    schema='catalogdb'
    )
    op.create_table('lake_zone',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('lake_zone_id', sa.Integer(), nullable=False),
    sa.Column('lake_zone_cd', sa.Integer(), nullable=False),
    sa.Column('lake_zone_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lake_zone_std_days', sa.Integer(), nullable=False),
    sa.Column('lake_zone_arch_days', sa.Integer(), nullable=False),
    sa.Column('bh_project_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bh_project_id'], ['catalogdb.bh_project.bh_project_id'], ),
    sa.PrimaryKeyConstraint('lake_zone_id'),
    schema='catalogdb'
    )
    op.create_table('data_source',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('data_src_tags', sa.JSON(), nullable=True),
    sa.Column('data_src_last_updated', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('data_src_id', sa.Integer(), nullable=False),
    sa.Column('data_src_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data_src_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_src_quality', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_src_status_cd', sa.Integer(), nullable=True),
    sa.Column('lake_zone_id', sa.Integer(), nullable=True),
    sa.Column('data_src_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['lake_zone_id'], ['catalogdb.lake_zone.lake_zone_id'], ),
    sa.PrimaryKeyConstraint('data_src_id'),
    schema='catalogdb'
    )
    op.create_table('platform_region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('region_identifier', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('platform_cd', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['platform_cd'], ['catalogdb.codes_dtl.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('region_identifier'),
    schema='catalogdb'
    )
    op.create_table('data_source_layout',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data_src_lyt_fmt_cd', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_delimiter_cd', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_cust_delimiter', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_src_lyt_header', sa.Boolean(), nullable=True),
    sa.Column('data_src_lyt_encoding_cd', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_quote_chars_cd', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_escape_chars_cd', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_regex', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_src_lyt_pk', sa.Boolean(), nullable=False),
    sa.Column('data_src_lyt_total_records', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_type_cd', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_is_mandatory', sa.Boolean(), nullable=False),
    sa.Column('data_src_n_rows_to_skip', sa.Integer(), nullable=True),
    sa.Column('data_src_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data_src_id', sa.Integer(), nullable=True),
    sa.Column('data_src_lyt_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.PrimaryKeyConstraint('data_src_lyt_id'),
    schema='catalogdb'
    )
    op.create_table('data_source_metadata',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('data_src_mtd_id', sa.Integer(), nullable=False),
    sa.Column('data_src_mtd_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data_src_mtd_value', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('data_src_mtd_datatype_cd', sa.Integer(), nullable=False),
    sa.Column('data_src_mtd_type_cd', sa.Integer(), nullable=False),
    sa.Column('data_src_id', sa.Integer(), nullable=True),
    sa.Column('data_src_mtd_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.PrimaryKeyConstraint('data_src_mtd_id'),
    schema='catalogdb'
    )
    op.create_table('joins',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('join_id', sa.Integer(), nullable=False),
    sa.Column('join_type_cd', sa.Integer(), nullable=True),
    sa.Column('join_index', sa.Integer(), nullable=False),
    sa.Column('join_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('join_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('join_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('left_data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('right_data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('left_data_src_id', sa.Integer(), nullable=False),
    sa.Column('right_data_src_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['left_data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.ForeignKeyConstraint(['left_data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.ForeignKeyConstraint(['right_data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.ForeignKeyConstraint(['right_data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.PrimaryKeyConstraint('join_id'),
    schema='catalogdb'
    )
    op.create_table('layout_fields',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('lyt_fld_tags', sa.JSON(), nullable=True),
    sa.Column('lyt_fld_id', sa.Integer(), nullable=False),
    sa.Column('lyt_fld_name', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('lyt_fld_desc', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('lyt_fld_order', sa.Integer(), nullable=False),
    sa.Column('lyt_fld_is_pk', sa.Boolean(), nullable=False),
    sa.Column('lyt_fld_start', sa.Integer(), nullable=True),
    sa.Column('lyt_fld_length', sa.Integer(), nullable=True),
    sa.Column('lyt_fld_data_type_cd', sa.Integer(), nullable=False),
    sa.Column('lyt_id', sa.Integer(), nullable=True),
    sa.Column('lyt_fld_key', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.ForeignKeyConstraint(['lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.PrimaryKeyConstraint('lyt_fld_id'),
    schema='catalogdb'
    )
    op.create_table('pipeline_sources',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('pipeline_src_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('data_src_id', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_src_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.ForeignKeyConstraint(['data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipelines.pipeline_id'], ),
    sa.PrimaryKeyConstraint('pipeline_src_id'),
    schema='catalogdb'
    )
    op.create_table('pipeline_targets',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('pipeline_tgt_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.Column('data_src_id', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_tgt_order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.ForeignKeyConstraint(['data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipelines.pipeline_id'], ),
    sa.PrimaryKeyConstraint('pipeline_tgt_id'),
    schema='catalogdb'
    )
    op.create_table('join_on',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('join_on_id', sa.Integer(), nullable=False),
    sa.Column('join_on_order', sa.Integer(), nullable=False),
    sa.Column('left_field_id', sa.Integer(), nullable=False),
    sa.Column('right_field_id', sa.Integer(), nullable=False),
    sa.Column('join_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['join_id'], ['catalogdb.joins.join_id'], ),
    sa.ForeignKeyConstraint(['left_field_id'], ['catalogdb.layout_fields.lyt_fld_id'], ),
    sa.ForeignKeyConstraint(['right_field_id'], ['catalogdb.layout_fields.lyt_fld_id'], ),
    sa.PrimaryKeyConstraint('join_on_id'),
    schema='catalogdb'
    )
    op.create_table('layout_fields_dq',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('fld_dq_params', sa.JSON(), nullable=True),
    sa.Column('fld_dq_id', sa.Integer(), nullable=False),
    sa.Column('fld_dq_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('lyt_fld_id', sa.Integer(), nullable=False),
    sa.Column('fld_dq_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['fld_dq_type_id'], ['catalogdb.fld_dq_types.dq_id'], ),
    sa.ForeignKeyConstraint(['lyt_fld_id'], ['catalogdb.layout_fields.lyt_fld_id'], ),
    sa.PrimaryKeyConstraint('fld_dq_id'),
    schema='catalogdb'
    )
    op.create_table('transform_logic',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('transform_inputs', sa.JSON(), nullable=True),
    sa.Column('transform_id', sa.Integer(), nullable=False),
    sa.Column('transform_desc', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transform_order', sa.Integer(), nullable=False),
    sa.Column('transform_function_id', sa.Integer(), nullable=False),
    sa.Column('join_id', sa.Integer(), nullable=True),
    sa.Column('pipeline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['join_id'], ['catalogdb.joins.join_id'], ),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipelines.pipeline_id'], ),
    sa.ForeignKeyConstraint(['transform_function_id'], ['catalogdb.function_registry.function_id'], ),
    sa.PrimaryKeyConstraint('transform_id'),
    schema='catalogdb'
    )
    op.create_table('transform_in_flds',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('transform_input_field_id', sa.Integer(), nullable=False),
    sa.Column('lyt_fld_id', sa.Integer(), nullable=False),
    sa.Column('transform_id', sa.Integer(), nullable=False),
    sa.Column('data_src_lyt_id', sa.Integer(), nullable=False),
    sa.Column('data_src_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['data_src_id'], ['catalogdb.data_source.data_src_id'], ),
    sa.ForeignKeyConstraint(['data_src_lyt_id'], ['catalogdb.data_source_layout.data_src_lyt_id'], ),
    sa.ForeignKeyConstraint(['lyt_fld_id'], ['catalogdb.layout_fields.lyt_fld_id'], ),
    sa.ForeignKeyConstraint(['transform_id'], ['catalogdb.transform_logic.transform_id'], ),
    sa.PrimaryKeyConstraint('transform_input_field_id'),
    schema='catalogdb'
    )
    op.create_table('transform_out_flds',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('transform_output_field_id', sa.Integer(), nullable=False),
    sa.Column('output_field_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('output_field_key', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('transform_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['transform_id'], ['catalogdb.transform_logic.transform_id'], ),
    sa.PrimaryKeyConstraint('transform_output_field_id'),
    schema='catalogdb'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transform_out_flds', schema='catalogdb')
    op.drop_table('transform_in_flds', schema='catalogdb')
    op.drop_table('transform_logic', schema='catalogdb')
    op.drop_table('layout_fields_dq', schema='catalogdb')
    op.drop_table('join_on', schema='catalogdb')
    op.drop_table('pipeline_targets', schema='catalogdb')
    op.drop_table('pipeline_sources', schema='catalogdb')
    op.drop_table('layout_fields', schema='catalogdb')
    op.drop_table('joins', schema='catalogdb')
    op.drop_table('data_source_metadata', schema='catalogdb')
    op.drop_table('data_source_layout', schema='catalogdb')
    op.drop_table('platform_region', schema='catalogdb')
    op.drop_table('data_source', schema='catalogdb')
    op.drop_table('lake_zone', schema='catalogdb')
    op.drop_table('connection_dtl', schema='catalogdb')
    op.drop_table('codes_dtl', schema='catalogdb')
    op.drop_table('pipelines', schema='catalogdb')
    op.drop_table('function_registry', schema='catalogdb')
    op.drop_table('fld_properties', schema='catalogdb')
    op.drop_table('fld_dq_types', schema='catalogdb')
    op.drop_table('customer', schema='catalogdb')
    op.drop_table('codes_hdr', schema='catalogdb')
    op.drop_table('bh_user', schema='catalogdb')
    op.drop_table('bh_project', schema='catalogdb')
    op.drop_table('app_user', schema='catalogdb')
    # ### end Alembic commands ###