"""flow_deployment_and_connection_model

Revision ID: ac519dd89f32
Revises: e9d608a40e5d
Create Date: 2024-10-08 12:33:33.969797

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW


# revision identifiers, used by Alembic.
revision = 'ac519dd89f32'
down_revision = 'e9d608a40e5d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('flow_connection',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connection_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('connection_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('connection_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bh_env_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bh_env_id'], ['catalogdb.project_environment.bh_env_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='catalogdb'
    )
    op.create_table('flow_alert',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('flow_alert_id', sa.Integer(), nullable=False),
    sa.Column('flow_id', sa.Integer(), nullable=True),
    sa.Column('flow_alert', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flow_id'], ['catalogdb.flow.flow_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('flow_alert_id'),
    schema='catalogdb'
    )
    op.create_table('flow_deployment',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('flow_properties', sa.JSON(), nullable=True),
    sa.Column('flow_deployment_id', sa.Integer(), nullable=False),
    sa.Column('flow_id', sa.Integer(), nullable=True),
    sa.Column('bh_env_id', sa.Integer(), nullable=False),
    sa.Column('flow_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('flow_lock_status', sa.Boolean(), nullable=False),
    sa.Column('flow_locked_by', sa.Integer(), nullable=True),
    sa.Column('flow_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('flow_wip_json', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['bh_env_id'], ['catalogdb.project_environment.bh_env_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['flow_id'], ['catalogdb.flow.flow_id'], ),
    sa.ForeignKeyConstraint(['flow_locked_by'], ['catalogdb.bh_user.bh_user_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('flow_deployment_id'),
    schema='catalogdb'
    )
    op.create_table('pipeline_setting',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('pipeline_setting', sa.JSON(), nullable=True),
    sa.Column('pipeline_setting_id', sa.Integer(), nullable=False),
    sa.Column('pipeline_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pipeline_id'], ['catalogdb.pipelines.pipeline_id'], ),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pipeline_setting_id'),
    schema='catalogdb'
    )
    op.add_column('bh_project', sa.Column('github_org', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.add_column('bh_project', sa.Column('repo_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_column('bh_project', 'bh_github_username', schema='catalogdb')
    op.add_column('customer', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_column('customer', 'status_cd', schema='catalogdb')
    op.add_column('data_source', sa.Column('owner', sa.Integer(), nullable=True), schema='catalogdb')
    op.create_foreign_key(None, 'data_source', 'bh_user', ['owner'], ['bh_user_id'], source_schema='catalogdb', referent_schema='catalogdb')
    op.add_column('flow', sa.Column('flow_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.add_column('flow', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_constraint('flow_bh_env_provider_fkey', 'flow', schema='catalogdb', type_='foreignkey')
    op.drop_column('flow', 'job', schema='catalogdb')
    op.drop_column('flow', 'metadata_flow', schema='catalogdb')
    op.drop_column('flow', 'bh_env_provider', schema='catalogdb')
    op.add_column('pipelines', sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.add_column('pipelines', sa.Column('last_executed', sa.DateTime(), nullable=True), schema='catalogdb')
    op.create_foreign_key(None, 'pipelines', 'bh_project', ['bh_project_id'], ['bh_project_id'], source_schema='catalogdb', referent_schema='catalogdb')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'pipelines', schema='catalogdb', type_='foreignkey')
    op.drop_column('pipelines', 'last_executed', schema='catalogdb')
    op.drop_column('pipelines', 'notes', schema='catalogdb')
    op.add_column('flow', sa.Column('bh_env_provider', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.add_column('flow', sa.Column('metadata_flow', sa.VARCHAR(), autoincrement=False, nullable=True), schema='catalogdb')
    op.add_column('flow', sa.Column('job', sa.VARCHAR(), autoincrement=False, nullable=True), schema='catalogdb')
    op.create_foreign_key('flow_bh_env_provider_fkey', 'flow', 'codes_dtl', ['bh_env_provider'], ['id'], source_schema='catalogdb', referent_schema='catalogdb')
    op.drop_column('flow', 'status', schema='catalogdb')
    op.drop_column('flow', 'flow_key', schema='catalogdb')
    op.drop_constraint(None, 'data_source', schema='catalogdb', type_='foreignkey')
    op.drop_column('data_source', 'owner', schema='catalogdb')
    op.add_column('customer', sa.Column('status_cd', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.drop_column('customer', 'status', schema='catalogdb')
    op.add_column('bh_project', sa.Column('bh_github_username', sa.VARCHAR(), autoincrement=False, nullable=True), schema='catalogdb')
    op.drop_column('bh_project', 'repo_name', schema='catalogdb')
    op.drop_column('bh_project', 'github_org', schema='catalogdb')
    op.drop_table('pipeline_setting', schema='catalogdb')
    op.drop_table('flow_deployment', schema='catalogdb')
    op.drop_table('flow_alert', schema='catalogdb')
    op.drop_table('flow_connection', schema='catalogdb')
    # ### end Alembic commands ###