"""lake_zone_model_changes

Revision ID: c64d620e9f68
Revises: a9c481169590
Create Date: 2024-09-25 12:32:32.792667

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c64d620e9f68'
down_revision = 'a9c481169590'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configure_lifecycle',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('configure_lifecycle_id', sa.Integer(), nullable=False),
    sa.Column('std_bronze_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('std_silver_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('std_gold_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('std_log_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('std_quarantine_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arc_bronze_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arc_silver_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arc_gold_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arc_log_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('arc_quarantine_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bh_env_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bh_env_id'], ['catalogdb.project_environment.bh_env_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('configure_lifecycle_id'),
    schema='catalogdb'
    )
    op.create_table('pre_configure_zone',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text("(CURRENT_TIMESTAMP AT TIME ZONE 'UTC')"), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('pre_configure_id', sa.Integer(), nullable=False),
    sa.Column('bronze_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('silver_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('gold_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('log_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quarantine_zone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bh_env_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bh_env_id'], ['catalogdb.project_environment.bh_env_id'], ),
    sa.ForeignKeyConstraint(['created_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['updated_by'], ['catalogdb.bh_user.bh_user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('pre_configure_id'),
    schema='catalogdb'
    )
    op.add_column('bh_project', sa.Column('ytd_cost', sa.Float(), nullable=True), schema='catalogdb')
    op.add_column('bh_project', sa.Column('current_month_cost', sa.Float(), nullable=True), schema='catalogdb')
    op.add_column('bh_project', sa.Column('total_storage', sa.Float(), nullable=True), schema='catalogdb')
    op.add_column('data_source', sa.Column('bh_project_id', sa.Integer(), nullable=True), schema='catalogdb')
    op.create_foreign_key(None, 'data_source', 'bh_project', ['bh_project_id'], ['bh_project_id'], source_schema='catalogdb', referent_schema='catalogdb')
    op.add_column('flow', sa.Column('flow_metadata', sa.JSON(), nullable=True), schema='catalogdb')
    op.alter_column('flow', 'bh_project_id',
               existing_type=sa.INTEGER(),
               nullable=False,
               schema='catalogdb')
    op.drop_constraint('flow_created_by_fkey', 'flow', schema='catalogdb', type_='foreignkey')
    op.drop_constraint('flow_updated_by_fkey', 'flow', schema='catalogdb', type_='foreignkey')
    op.drop_column('flow', 'json_config', schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.add_column('lake_zone', sa.Column('business_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_column('lake_zone', 'lake_zone_std_days', schema='catalogdb')
    op.drop_column('lake_zone', 'lake_zone_arch_days', schema='catalogdb')
    op.drop_column('lake_zone', 'lake_zone_url', schema='catalogdb')
    op.drop_column('lake_zone', 'lake_zone_cd', schema='catalogdb')
    op.add_column('pipelines', sa.Column('pipeline_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_column('pipelines', 'json_config', schema='catalogdb')
    op.add_column('project_environment', sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True), schema='catalogdb')
    op.drop_column('project_environment', 'status_cd', schema='catalogdb')
    op.drop_constraint('schedule_interval_created_by_fkey', 'schedule_interval', schema='catalogdb', type_='foreignkey')
    op.drop_constraint('schedule_interval_updated_by_fkey', 'schedule_interval', schema='catalogdb', type_='foreignkey')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('schedule_interval_updated_by_fkey', 'schedule_interval', 'bh_user', ['updated_by'], ['bh_user_id'], source_schema='catalogdb', referent_schema='catalogdb', ondelete='CASCADE')
    op.create_foreign_key('schedule_interval_created_by_fkey', 'schedule_interval', 'bh_user', ['created_by'], ['bh_user_id'], source_schema='catalogdb', referent_schema='catalogdb', ondelete='CASCADE')
    op.add_column('project_environment', sa.Column('status_cd', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.drop_column('project_environment', 'status', schema='catalogdb')
    op.add_column('pipelines', sa.Column('json_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True), schema='catalogdb')
    op.drop_column('pipelines', 'pipeline_metadata', schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_zone_cd', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_zone_url', sa.VARCHAR(), autoincrement=False, nullable=True), schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_zone_arch_days', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.add_column('lake_zone', sa.Column('lake_zone_std_days', sa.INTEGER(), autoincrement=False, nullable=True), schema='catalogdb')
    op.drop_column('lake_zone', 'lake_description', schema='catalogdb')
    op.drop_column('lake_zone', 'business_url', schema='catalogdb')
    op.drop_column('lake_zone', 'lake_name', schema='catalogdb')
    op.add_column('flow', sa.Column('json_config', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True), schema='catalogdb')
    op.create_foreign_key('flow_updated_by_fkey', 'flow', 'bh_user', ['updated_by'], ['bh_user_id'], source_schema='catalogdb', referent_schema='catalogdb', ondelete='CASCADE')
    op.create_foreign_key('flow_created_by_fkey', 'flow', 'bh_user', ['created_by'], ['bh_user_id'], source_schema='catalogdb', referent_schema='catalogdb', ondelete='CASCADE')
    op.alter_column('flow', 'bh_project_id',
               existing_type=sa.INTEGER(),
               nullable=True,
               schema='catalogdb')
    op.drop_column('flow', 'flow_metadata', schema='catalogdb')
    op.drop_constraint('bh_project_updated_by_fkey', 'data_source', schema='catalogdb', type_='foreignkey')
    op.drop_column('data_source', 'bh_project_id', schema='catalogdb')
    op.drop_column('bh_project', 'total_storage', schema='catalogdb')
    op.drop_column('bh_project', 'current_month_cost', schema='catalogdb')
    op.drop_column('bh_project', 'ytd_cost', schema='catalogdb')
    op.drop_table('pre_configure_zone', schema='catalogdb')
    op.drop_table('configure_lifecycle', schema='catalogdb')
    # ### end Alembic commands ###