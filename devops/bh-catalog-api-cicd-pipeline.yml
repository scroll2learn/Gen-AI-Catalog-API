version: 0.2

phases:
  pre_build:
    commands:
      - echo log in to Amazon ECR...
      - aws --version
      - APP_NAME="bhcatalogapi"
      - REPOSITORY="211125309326.dkr.ecr.us-east-1.amazonaws.com"
      - CURRENT_APP_VERSION="1.0.0"
      - REPOSITORY_URI=$REPOSITORY/$APP_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - COMMIT_IMAGE_TAG=${COMMIT_HASH:=latest}
      - DEFAULT_IMAGE_TAG="latest"
      - BUILD_NUMBER="$CODEBUILD_BUILD_NUMBER"
      - IMAGE_TAG="$CURRENT_APP_VERSION-$BUILD_NUMBER-rc"
      - echo $AWS_REGION
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image.
      - docker images
      - docker build -t $REPOSITORY_URI:$DEFAULT_IMAGE_TAG .
      - docker images
      - docker tag $REPOSITORY_URI:$DEFAULT_IMAGE_TAG $REPOSITORY_URI:$COMMIT_IMAGE_TAG
      - docker tag $REPOSITORY_URI:$DEFAULT_IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
      - docker images
  post_build:
    commands:
      - echo Build completed on `date`
      - docker push $REPOSITORY_URI:$DEFAULT_IMAGE_TAG
      - docker push $REPOSITORY_URI:$COMMIT_IMAGE_TAG
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo write definitions file...
      - printf '[{"name":"bh-catalog-api-cicd-pipeline","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json